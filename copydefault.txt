sudo cp /etc/nginx/sites-available/default /home/mqttuser/hello/default202011080
703

sudo cp /home/mqttuser/hello/default202011080703 /etc/nginx/sites-available/default

location = /hello { rewrite ^ /hello/; }
location /hello { try_files $uri @hello; }
location @hello {
  include uwsgi_params;
  uwsgi_pass unix:/home/mqttuser/hello/hello.sock;
}

------- original


server {
        listen 80 default_server;
        listen [::]:80 default_server;
        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;
        root /var/www/html;
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;



============


server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /var/www/html;
    server_name  acgdata.info www.acgdata.info;

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/acgdata.info/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/acgdata.info/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot
}
